// AMD AMDUtils code
// 
// Copyright(c) 2018 Advanced Micro Devices, Inc.All rights reserved.
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files(the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions :
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
// 
 
//--------------------------------------------------------------------------------------
//  For PS input struct
//--------------------------------------------------------------------------------------



#define RS "RootFlags( ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT), " \
              "CBV(b0, visibility=SHADER_VISIBILITY_ALL), " \
              "DescriptorTable(SRV(t0), SRV(t1), SRV(t2), SRV(t3), SRV(t4), SRV(t5), SRV(t6), SRV(t7), SRV(t8), SRV(t9)), " \
              "CBV(b1, visibility=SHADER_VISIBILITY_ALL), " \
              "CBV(b2, visibility=SHADER_VISIBILITY_ALL), " \
              "StaticSampler(s0), " \
              "StaticSampler(s1), " \
              "StaticSampler(s2), " \
              "StaticSampler(s3), " \
              "StaticSampler(s4), " \
              "StaticSampler(s5), " \
              "StaticSampler(s6), " \
              "StaticSampler(s7), " \
              "StaticSampler(s8), " \
              "StaticSampler(s9), " \
              "StaticSampler(s10)" 


struct VS_OUTPUT_SCENE
{
    float4 svPosition   :    SV_POSITION;   // vertex position
    float3 WorldPos     :    WORLDPOS;      // vertex position
#ifdef HAS_NORMAL
    float3 Normal       :    NORMAL;        // this normal comes in per-vertex
#endif        
#ifdef HAS_TANGENT    
    float3 Tangent      :    TANGENT;       // this normal comes in per-vertex
    float3 Binormal     :    BINORMAL;     // this normal comes in per-vertex
#endif        
#ifdef HAS_COLOR_0
    float4 Color0       :    COLOR0;
#endif
#ifdef HAS_TEXCOORD_0
    float2 UV0       :    TEXCOORD0;    // vertex texture coords
#endif
#ifdef HAS_TEXCOORD_1
    float2 UV1       :    TEXCOORD1;    // vertex texture coords
#endif

#ifdef HAS_MOTION_VECTORS
    float4 svCurrPosition : TEXCOORD2; // current's frame vertex position 
    float4 svPrevPosition : TEXCOORD3; // previous' frame vertex position
#endif
};

