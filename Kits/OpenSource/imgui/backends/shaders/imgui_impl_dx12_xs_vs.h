#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; POSITION                 0   xy          0     NONE   float   xy  
; COLOR                    0   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xy          2     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float   xyzw
; COLOR                    0   xyzw        1     NONE   float   xyzw
; TEXCOORD                 0   xy          2     NONE   float   xy  
;
; shader debug name: D:\Projects\ATG\gx_dev\Samples\System\AccessibilitySample\Gaming.Xbox.Scarlett.x64\Debug\vs.pdb
; shader hash: 9f53c47b24ae552cae8beb32bad41b47
;
; Pipeline Runtime Information: 
;
;PSVRuntimeInfo:
; Vertex Shader
; OutputPositionPresent=1
; MinimumExpectedWaveLaneCount: 0
; MaximumExpectedWaveLaneCount: 4294967295
; UsesViewID: false
; SigInputElements: 3
; SigOutputElements: 3
; SigPatchConstOrPrimElements: 0
; SigInputVectors: 3
; SigOutputVectors[0]: 3
; SigOutputVectors[1]: 0
; SigOutputVectors[2]: 0
; SigOutputVectors[3]: 0
; EntryFunctionName: main
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; POSITION                 0                              
; COLOR                    0                              
; TEXCOORD                 0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; COLOR                    0                 linear       
; TEXCOORD                 0                 linear       
;
; Buffer Definitions:
;
; cbuffer vertexBuffer
; {
;
;   struct hostlayout.vertexBuffer
;   {
;
;       column_major float4x4 ProjectionMatrix;       ; Offset:    0
;   
;   } vertexBuffer;                                   ; Offset:    0 Size:    64
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; vertexBuffer                      cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 10, outputs: 10
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1 }
;   output 1 depends on inputs: { 0, 1 }
;   output 2 depends on inputs: { 0, 1 }
;   output 3 depends on inputs: { 0, 1 }
;   output 4 depends on inputs: { 4 }
;   output 5 depends on inputs: { 5 }
;   output 6 depends on inputs: { 6 }
;   output 7 depends on inputs: { 7 }
;   output 8 depends on inputs: { 8 }
;   output 9 depends on inputs: { 9 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-xb2"

%dx.types.Handle = type { i8* }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.vertexBuffer = type { [4 x <4 x float>] }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandle(i32 57, i8 2, i32 0, i32 0, i1 false)  ; CreateHandle(resourceClass,rangeId,index,nonUniformIndex)
  %2 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %11 = extractvalue %dx.types.CBufRet.f32 %10, 0
  %12 = extractvalue %dx.types.CBufRet.f32 %10, 1
  %13 = extractvalue %dx.types.CBufRet.f32 %10, 2
  %14 = extractvalue %dx.types.CBufRet.f32 %10, 3
  %15 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %16 = extractvalue %dx.types.CBufRet.f32 %15, 0
  %17 = extractvalue %dx.types.CBufRet.f32 %15, 1
  %18 = extractvalue %dx.types.CBufRet.f32 %15, 2
  %19 = extractvalue %dx.types.CBufRet.f32 %15, 3
  %20 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %1, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %21 = extractvalue %dx.types.CBufRet.f32 %20, 0
  %22 = extractvalue %dx.types.CBufRet.f32 %20, 1
  %23 = extractvalue %dx.types.CBufRet.f32 %20, 2
  %24 = extractvalue %dx.types.CBufRet.f32 %20, 3
  %25 = fmul fast float %11, %8
  %26 = call float @dx.op.tertiary.f32(i32 46, float %16, float %9, float %25)  ; FMad(a,b,c)
  %27 = fadd fast float %21, %26
  %28 = fmul fast float %12, %8
  %29 = call float @dx.op.tertiary.f32(i32 46, float %17, float %9, float %28)  ; FMad(a,b,c)
  %30 = fadd fast float %29, %22
  %31 = fmul fast float %13, %8
  %32 = call float @dx.op.tertiary.f32(i32 46, float %18, float %9, float %31)  ; FMad(a,b,c)
  %33 = fadd fast float %32, %23
  %34 = fmul fast float %14, %8
  %35 = call float @dx.op.tertiary.f32(i32 46, float %19, float %9, float %34)  ; FMad(a,b,c)
  %36 = fadd fast float %35, %24
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %27)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %30)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %33)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %36)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %4)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %5)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %6)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %7)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %2)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %3)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandle(i32, i8, i32, i32, i1) #2

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!7}
!dx.entryPoints = !{!8}

!0 = !{!"dxcxbox 2410.2501.11901.10020"}
!1 = !{i32 1, i32 0}
!2 = !{i32 1, i32 8}
!3 = !{!"vs", i32 6, i32 0}
!4 = !{null, null, !5, null}
!5 = !{!6}
!6 = !{i32 0, %hostlayout.vertexBuffer* undef, !"", i32 0, i32 0, i32 1, i32 64, null}
!7 = !{[12 x i32] [i32 10, i32 10, i32 15, i32 15, i32 0, i32 0, i32 16, i32 32, i32 64, i32 128, i32 256, i32 512]}
!8 = !{void ()* @main, !"main", !9, !4, null}
!9 = !{!10, !17, null}
!10 = !{!11, !14, !16}
!11 = !{i32 0, !"POSITION", i8 9, i8 0, !12, i8 0, i32 1, i8 2, i32 0, i8 0, !13}
!12 = !{i32 0}
!13 = !{i32 3, i32 3}
!14 = !{i32 1, !"COLOR", i8 9, i8 0, !12, i8 0, i32 1, i8 4, i32 1, i8 0, !15}
!15 = !{i32 3, i32 15}
!16 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !12, i8 0, i32 1, i8 2, i32 2, i8 0, !13}
!17 = !{!18, !19, !20}
!18 = !{i32 0, !"SV_Position", i8 9, i8 3, !12, i8 4, i32 1, i8 4, i32 0, i8 0, !15}
!19 = !{i32 1, !"COLOR", i8 9, i8 0, !12, i8 2, i32 1, i8 4, i32 1, i8 0, !15}
!20 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !12, i8 2, i32 1, i8 2, i32 2, i8 0, !13}
; 
; ----------------------------------------------------------------
; ----------------------XBOX SHADER COMPILER----------------------
; ----------------------------------------------------------------
; 
; 
; Dumping Xbox Precompiled Shaders (Found 1 Shader)
; 
; Shader #1
; version: 6
; 
; PipelineCompileOptions { 
;   asic: GFX10
;   compiler: NB
;   pipeline: GCN
;   mesh_shader_pipeline: 0
;   enable_fast_launch: 0
;   disable_embedded_option_parsing: 1
;   enable_recompile_warnings: 0
;   disable_minprec_to_native_16bit: 0
;   slience_recompile_warnings: 1
;   override_ngg_pipeline_confg: 0
;   ngg_enable_user_gs: 0
;   disable_inst_stats: 0
; }
; 
; LS: null
; HS: null
; ES: null
; GS: null
; VS {
;   // -------------------  COMMON FIELDS --------------------//
;   // shader info 
;   hw_shader_stage: VS
;   dx_shader_stage: VERTEX
;   isa: GFX10
;   compiler: NB
;   num_vgprs: 14
;   num_shared_vgprs: 0
;   num_sgprs: 26
;   float_mode: 192
;   dx10_clamp: 1
;   ieee_mode: 0
;   uses_prim_id: 0
;   flat_ptr_32: 0
;   scratch_size: 0
;   lds_byte_size: 0
;   has_indirect_calls: 0
;   precompiled_shader: 0
; 
;   // code info 
;   code_size_in_bytes: 256
; shader main
;   asic(GFX10_A)
;   type(VS)
; 
;   v_nop_xbox_data 0x7bc4539f, 0x2c55ae24                // 000000000000: D580539F 03FEF7C4 2C55AE24
;   v_nop_xbox_data 0x32eb8bae, 0x471bd4ba                // 00000000000C: D5808BAE 03FE65EB 471BD4BA
;   s_swappc_b64  s[4:5], s[4:5]                          // 000000000018: BE842104
;   s_inst_prefetch  0x0003                               // 00000000001C: BFA00003
;   s_waitcnt     vmcnt(0)                                // 000000000020: BF8C3F70
;   v_fma_f32     v0, s8, v4, s20                         // 000000000024: D54B0000 00520808
;   v_fma_f32     v1, s9, v4, s21                         // 00000000002C: D54B0001 00560809
;   v_fma_f32     v2, s10, v4, s22                        // 000000000034: D54B0002 005A080A
;   v_fma_f32     v3, s11, v4, s23                        // 00000000003C: D54B0003 005E080B
;   v_fmac_f32    v0, s12, v5                             // 000000000044: 56000A0C
;   v_fmac_f32    v1, s13, v5                             // 000000000048: 56020A0D
;   v_fmac_f32    v2, s14, v5                             // 00000000004C: 56040A0E
;   v_fmac_f32    v3, s15, v5                             // 000000000050: 56060A0F
;   exp           pos0, v0, v1, v2, v3 done               // 000000000054: F80008CF 03020100
;   s_waitcnt     expcnt(0)                               // 00000000005C: BF8CFF0F
;   v_mov_b32     v2, 0                                   // 000000000060: 7E040280
;   v_mov_b32     v3, 1.0                                 // 000000000064: 7E0602F2
;   exp           param0, v8, v9, v10, v11                // 000000000068: F800020F 0B0A0908
;   exp           param1, v12, v13, v2, v3                // 000000000070: F800021F 03020D0C
;   s_endpgm                                              // 000000000078: BF810000
;   s_code_end                                            // 00000000007C: BF9F0000
;   s_code_end                                            // 000000000080: BF9F0000
;   s_code_end                                            // 000000000084: BF9F0000
;   s_code_end                                            // 000000000088: BF9F0000
;   s_code_end                                            // 00000000008C: BF9F0000
;   s_code_end                                            // 000000000090: BF9F0000
;   s_code_end                                            // 000000000094: BF9F0000
;   s_code_end                                            // 000000000098: BF9F0000
;   s_code_end                                            // 00000000009C: BF9F0000
;   s_code_end                                            // 0000000000A0: BF9F0000
;   s_code_end                                            // 0000000000A4: BF9F0000
;   s_code_end                                            // 0000000000A8: BF9F0000
;   s_code_end                                            // 0000000000AC: BF9F0000
;   s_code_end                                            // 0000000000B0: BF9F0000
;   s_code_end                                            // 0000000000B4: BF9F0000
;   s_code_end                                            // 0000000000B8: BF9F0000
;   s_code_end                                            // 0000000000BC: BF9F0000
;   s_code_end                                            // 0000000000C0: BF9F0000
;   s_code_end                                            // 0000000000C4: BF9F0000
;   s_code_end                                            // 0000000000C8: BF9F0000
;   s_code_end                                            // 0000000000CC: BF9F0000
;   s_code_end                                            // 0000000000D0: BF9F0000
;   s_code_end                                            // 0000000000D4: BF9F0000
;   s_code_end                                            // 0000000000D8: BF9F0000
;   s_code_end                                            // 0000000000DC: BF9F0000
;   s_code_end                                            // 0000000000E0: BF9F0000
;   s_code_end                                            // 0000000000E4: BF9F0000
;   s_code_end                                            // 0000000000E8: BF9F0000
;   s_code_end                                            // 0000000000EC: BF9F0000
;   s_code_end                                            // 0000000000F0: BF9F0000
;   s_code_end                                            // 0000000000F4: BF9F0000
;   s_code_end                                            // 0000000000F8: BF9F0000
;   s_code_end                                            // 0000000000FC: BF9F0000
; end
; 
;   // abi info 
;   uses_global_table: 0
;   uses_streamout_table: 0
;   uses_fetch_shader: 1
;   fetch_shader_address_reg: 4
;   fetch_shader_return_reg: 4
;   uses_gds_memory_range: 0
;   uses_gds_counter_range: 0
;   uses_lds_es_gs_size: 0
;   enable_wave32: 0
;   top_root_signature_dword_used: 25
;   es_or_ls_part_size_bytes: 0
; 
;   // pix info 
;   root_signature_layout_count: 2
;     rootsig_layout[0] {
;       root_type: DX12_ROOT_CONSTANT
;       table_offset_dwords: 0
;       num_user_regs: 16
;       resource_base_register: 0
;       allocated_offset: 8
;       orig_rootsig_slot_id: 0
;     }
;     rootsig_layout[1] {
;       root_type: DX12_DESCRIPTOR_TABLE_RANGE
;       table_offset_dwords: 0
;       num_user_regs: 1
;       resource_base_register: 0
;       allocated_offset: 24
;       orig_rootsig_slot_id: 1
;     }
; 
;   // entry used resources info
;   used_resources_count: 1
;     used_resource[0] {
;       resource_type: CBV
;       root_type: DX12_ROOT_CONSTANT
;       table_offset_dwords: 0
;       descriptor_reg_count: 4
;       resource_lower_bound: 0
;       allocated_offset : 8
;       orig_rootsig_slot_id: 0
;       resource_stride: 0
;       dynamically_indexed: 0
;       part_mask: 0
;       local_rootsig: 0
;     }
; 
;   // symbol info
;   num_entries: 1
;   entries_data_allocation_size_bytes: 24
;     entry[0] {
;       offset_in_code_bytes: 0
;       name_offset_bytes: 0 (main)
;       num_vgprs_minus_one: 0
;       num_sgprs: 0
;       scratch_dwords_per_lane: 0
;       size_bytes: 4294967295
;       lds_dwords_per_threadgroup: 0
;       has_indirect_calls: 0
;     }
; 
;   // -------------------  VS FIELDS --------------------//
;   // Input and output semantics
;   num_input_semantics: 3
;     input_semantic[0] {
;       usage: GENERIC
;       usage_idx: 0
;       channel_mask: 3
;       data_vgpr: 4
;       data_size: 1
;     }
;     input_semantic[1] {
;       usage: GENERIC
;       usage_idx: 1
;       channel_mask: 15
;       data_vgpr: 8
;       data_size: 3
;     }
;     input_semantic[2] {
;       usage: GENERIC
;       usage_idx: 2
;       channel_mask: 3
;       data_vgpr: 12
;       data_size: 1
;     }
; 
;   num_output_semantics: 2
;     output_semantic[0] {
;       usage: GENERIC
;       usage_idx: 1
;       param_idx: 0
;       fp16_mode: 0
;       fp16_pack2: 0
;       usage_idx2: 0
;       param_slot: 0
;     }
;     output_semantic[1] {
;       usage: GENERIC
;       usage_idx: 2
;       param_idx: 1
;       fp16_mode: 0
;       fp16_pack2: 0
;       usage_idx2: 0
;       param_slot: 0
;     }
; 
;   // Hardware registers
;   reg_spi_shader_pgm_rsrc2_LS: 50 {
;     scratch_en: 0
;     user_sgpr: 25
;     trap_present: 0
;     lds_size: 0
;     excp_en: 0
;   }
;   reg_spi_shader_pgm_rsrc2_ES: 50 {
;     scratch_en: 0
;     user_sgpr: 25
;     trap_present: 0
;     oc_lds_en: 0
;     excp_en: 0
;     lds_size: 0
;   }
;   reg_spi_shader_pgm_rsrc2_VS: 50 {
;     scratch_en: 0
;     user_sgpr: 25
;     trap_present: 0
;     oc_lds_en: 0
;     so_base0_en: 0
;     so_base1_en: 0
;     so_base2_en: 0
;     so_base3_en: 0
;     so_en: 0
;     excp_en: 0
;     pc_base_en: 0
;     dispatch_draw_en: 0
;     user_sgpr_msb: 0
;     shared_vgpr_cnt: 0
;   }
;   reg_spi_vs_out_config: 2 {
;     vs_export_count: 1
;     vs_half_pack: 0
;     no_pc_export: 0
;     prim_export_count: 0
;   }
;   reg_spi_shader_pos_format: 4 {
;     pos0_export_format: 4 (4Component)
;     pos1_export_format: 0 (None)
;     pos2_export_format: 0 (None)
;     pos3_export_format: 0 (None)
;     pos4_export_format: 0 (None)
;   }
;   reg_pa_cl_vs_out_cntl: 0 {
;     clip_dist_ena_0: 0
;     clip_dist_ena_1: 0
;     clip_dist_ena_2: 0
;     clip_dist_ena_3: 0
;     clip_dist_ena_4: 0
;     clip_dist_ena_5: 0
;     clip_dist_ena_6: 0
;     clip_dist_ena_7: 0
;     cull_dist_ena_0: 0
;     cull_dist_ena_1: 0
;     cull_dist_ena_2: 0
;     cull_dist_ena_3: 0
;     cull_dist_ena_4: 0
;     cull_dist_ena_5: 0
;     cull_dist_ena_6: 0
;     cull_dist_ena_7: 0
;     use_vtx_point_size: 0
;     use_vtx_edge_flag: 0
;     use_vtx_render_target_indx: 0
;     use_vtx_viewport_indx: 0
;     use_vtx_kill_flag: 0
;     vs_out_misc_vec_ena: 0
;     vs_out_ccdist0_vec_ena: 0
;     vs_out_ccdist1_vec_ena: 0
;     vs_out_misc_side_bus_ena: 0
;     use_vtx_gs_cut_flag: 0
;     use_vtx_line_width: 0
;     use_vtx_vrs_rate: 0
;   }
;   reg_vgt_strmout_config: 0 {
;     streamout_0_en: 0
;     streamout_1_en: 0
;     streamout_2_en: 0
;     streamout_3_en: 0
;     rast_stream: 0
;     en_prims_needed_cnt: 0
;     rast_stream_mask: 0
;     use_rast_stream_mask: 0
;   }
; 
;   // VS shader info
;   vgpr_comp_cnt: 0
;   export_vertex_size: 8
;   es_gs_ring_item_size: 0
;   ls_stride: 0
;   uses_vertex_id: 0
; 
;   // Fetch shader live reg info
;   LiveRegInfo {
;     sgpr[31:0]    = 00000000111100001111111100110000
;     sgpr[63:32]   = 00000000000000000000000000000000
;     sgpr[95:64]   = 00000000000000000000000000000000
;     sgpr[127:96]  = 00000000000000000000000000000000
; 
;     vgpr[31:0]    = 00000000000000000011111100110000
;     vgpr[63:32]   = 00000000000000000000000000000000
;     vgpr[95:64]   = 00000000000000000000000000000000
;     vgpr[127:96]  = 00000000000000000000000000000000
;     vgpr[159:128] = 00000000000000000000000000000000
;     vgpr[191:160] = 00000000000000000000000000000000
;     vgpr[223:192] = 00000000000000000000000000000000
;     vgpr[255:224] = 00000000000000000000000000000000
;   }
; }
; 
; VS NumVGPR=14,NumSGPR=26,LDS=0,Scratch=0,WaveSize=64,Occupancy=20
; VAlu:10,SAlu:5,VMem:0,SMem:0,LDS:0,WaitCntOnVMem:1,UncondBranch:0,CondBranch:0
; 
; PS: null

#endif

const unsigned char g_imgui_impl_dx12_vs[] = {
  0x44, 0x58, 0x42, 0x43, 0xf9, 0x01, 0x09, 0x80, 0xb3, 0x5c, 0xf1, 0x91,
  0xf7, 0x04, 0x7f, 0x56, 0xf9, 0x34, 0x8e, 0xa3, 0x01, 0x00, 0x00, 0x00,
  0x64, 0x13, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00,
  0x54, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00,
  0x98, 0x02, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0xa0, 0x09, 0x00, 0x00,
  0x0c, 0x0a, 0x00, 0x00, 0x28, 0x0a, 0x00, 0x00, 0x53, 0x46, 0x49, 0x30,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x49, 0x53, 0x47, 0x31, 0x80, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f,
  0x4f, 0x52, 0x44, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x84, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x00,
  0x50, 0x53, 0x56, 0x30, 0x28, 0x01, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f,
  0x4e, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54, 0x45, 0x58, 0x43,
  0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x6d, 0x61, 0x69, 0x6e,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x44, 0x03, 0x03, 0x04, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x52, 0x54, 0x53, 0x30, 0x90, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x15, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0x68, 0x06, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00,
  0x9a, 0x01, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x50, 0x06, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x91, 0x01, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x14, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xa4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x52, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x91, 0x22, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x29, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x32, 0x22, 0x48, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x93, 0x22, 0xa4, 0x84, 0x04, 0x93, 0x22, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8a, 0x8c, 0x0b, 0x84, 0xa4, 0x4c,
  0x10, 0x68, 0x23, 0x00, 0x25, 0x00, 0x14, 0x66, 0x00, 0xe6, 0x08, 0xc0,
  0x60, 0x8e, 0x00, 0x29, 0xc6, 0x20, 0x84, 0x14, 0x42, 0xa6, 0x18, 0x80,
  0x10, 0x52, 0x06, 0xa1, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c,
  0x6e, 0xa3, 0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x31, 0xc6, 0x18,
  0x54, 0xee, 0x19, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19,
  0x16, 0x02, 0x05, 0xab, 0x10, 0x8a, 0x30, 0x42, 0xad, 0x14, 0x83, 0x8c,
  0x31, 0xe8, 0xcd, 0x11, 0x04, 0xc5, 0x60, 0xa4, 0x10, 0x12, 0x49, 0x0e,
  0x04, 0x0c, 0x23, 0x10, 0x43, 0x12, 0xd4, 0xbb, 0x0e, 0x47, 0x9a, 0x16,
  0x00, 0x73, 0xa8, 0xc9, 0xaf, 0x88, 0x68, 0x22, 0xae, 0x8d, 0x2a, 0x0a,
  0x22, 0x42, 0x81, 0xa5, 0x9b, 0x0c, 0x04, 0x00, 0x13, 0x16, 0x72, 0xc0,
  0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10,
  0x07, 0x39, 0xd8, 0xf0, 0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5,
  0xd0, 0x06, 0xf0, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe9, 0x10, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9,
  0x80, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a,
  0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76,
  0x40, 0x07, 0x6d, 0x60, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x60, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee,
  0x80, 0x07, 0x7a, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0x30, 0xe4, 0x09, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x03, 0x04, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x07, 0x08,
  0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x12,
  0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x81,
  0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14,
  0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22,
  0x25, 0x30, 0x02, 0x50, 0x0c, 0x05, 0x18, 0x50, 0x04, 0x85, 0x50, 0x06,
  0xe5, 0x50, 0x12, 0xe5, 0x51, 0x10, 0xe5, 0x55, 0x14, 0x54, 0x4a, 0x62,
  0x04, 0xa0, 0x08, 0x0a, 0xa1, 0x0c, 0xe8, 0xce, 0x00, 0x10, 0x9e, 0x01,
  0xa0, 0x3c, 0x16, 0xa3, 0x28, 0xcf, 0x03, 0x00, 0x10, 0x18, 0x80, 0x02,
  0x48, 0x80, 0x08, 0x08, 0x01, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x90, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x8e, 0x0c, 0x6f, 0x0c, 0x4f, 0xec, 0x0d, 0x0f, 0x44, 0x86, 0x26, 0x06,
  0xc6, 0x45, 0xa6, 0x06, 0x26, 0xc6, 0x25, 0x26, 0x26, 0x07, 0x26, 0xc6,
  0x25, 0x06, 0x06, 0x46, 0x06, 0x66, 0x43, 0x10, 0x4c, 0x10, 0x08, 0x63,
  0x82, 0x40, 0x1c, 0x1b, 0x84, 0x81, 0xd8, 0x20, 0x10, 0x04, 0x05, 0xbb,
  0xb9, 0x09, 0x02, 0x81, 0x6c, 0x18, 0x0e, 0x84, 0x98, 0x20, 0x60, 0x19,
  0x19, 0xbb, 0x32, 0x39, 0xba, 0x32, 0x3c, 0xa1, 0x3a, 0x33, 0xb3, 0x32,
  0xb9, 0x09, 0x02, 0x91, 0x6c, 0x40, 0x08, 0x65, 0x21, 0x88, 0x81, 0x01,
  0x36, 0x04, 0xcd, 0x06, 0x02, 0x00, 0x1c, 0x60, 0x82, 0x70, 0x61, 0x84,
  0xa0, 0xe4, 0xde, 0xd4, 0xca, 0xc6, 0xe8, 0xd2, 0xde, 0xdc, 0x9a, 0xc2,
  0xe8, 0xe4, 0xd2, 0xf0, 0x26, 0x08, 0x84, 0x32, 0x41, 0x20, 0x96, 0x0d,
  0xc3, 0x34, 0x49, 0x13, 0x04, 0x82, 0x99, 0x20, 0x10, 0xcd, 0x04, 0x81,
  0x70, 0x36, 0x20, 0x48, 0x24, 0x51, 0x15, 0x61, 0x5d, 0x1b, 0x04, 0x06,
  0xdb, 0x30, 0x10, 0x50, 0x36, 0x41, 0x10, 0x80, 0x0d, 0xc0, 0x86, 0x81,
  0xe0, 0xb8, 0x0d, 0x41, 0xb7, 0x61, 0x18, 0x36, 0x6f, 0x82, 0x90, 0x69,
  0x1b, 0x02, 0x30, 0x20, 0xd1, 0x16, 0x96, 0xe6, 0x46, 0x04, 0xea, 0x69,
  0x2a, 0x89, 0x2a, 0xe9, 0xc9, 0x69, 0x82, 0x50, 0x4c, 0x13, 0x84, 0x82,
  0xda, 0x10, 0x10, 0x13, 0x84, 0xa2, 0xda, 0x20, 0x54, 0xd5, 0x86, 0x85,
  0x18, 0x03, 0x32, 0x28, 0x03, 0x33, 0x28, 0x83, 0xe1, 0x0c, 0x88, 0x32,
  0x40, 0x03, 0x16, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x13, 0x84, 0xc2, 0x9a,
  0x20, 0x10, 0xcf, 0x06, 0xa1, 0x62, 0x83, 0x0d, 0xcb, 0xa0, 0x06, 0x64,
  0x50, 0x06, 0x66, 0x50, 0x06, 0xc3, 0x1a, 0x0c, 0x65, 0xd0, 0x06, 0x44,
  0xa8, 0x8a, 0xb0, 0x86, 0x9e, 0x9e, 0xa4, 0x88, 0x36, 0x2c, 0xd2, 0x1b,
  0x90, 0x41, 0x19, 0x98, 0x41, 0x19, 0x0c, 0x67, 0x20, 0x95, 0x01, 0x1a,
  0x6c, 0x18, 0xd2, 0xc0, 0x0d, 0xe0, 0x80, 0xcb, 0x94, 0xd5, 0x17, 0xd4,
  0xdb, 0x5c, 0x1a, 0x5d, 0xda, 0x9b, 0xdb, 0x04, 0xa1, 0xb8, 0x36, 0x2c,
  0x84, 0x1c, 0x90, 0xc1, 0x1c, 0x98, 0xc1, 0x1a, 0x0c, 0x6b, 0x40, 0x94,
  0x41, 0x1b, 0x6c, 0x58, 0x06, 0x35, 0x20, 0x83, 0x32, 0x30, 0x83, 0x33,
  0x18, 0xd6, 0x60, 0x28, 0x83, 0x36, 0xd8, 0xb0, 0x48, 0x6f, 0x40, 0x06,
  0x65, 0x60, 0x06, 0x67, 0x30, 0x9c, 0x81, 0x54, 0x06, 0x68, 0xb0, 0x61,
  0xa0, 0x83, 0x3a, 0xb0, 0x83, 0x0d, 0x43, 0x1c, 0xdc, 0x01, 0xb0, 0xa1,
  0xd8, 0xc4, 0x00, 0x0f, 0x1e, 0x80, 0x86, 0x19, 0xdb, 0x5b, 0x18, 0xdd,
  0xdc, 0x04, 0x81, 0x80, 0x58, 0xa4, 0xb9, 0xcd, 0xd1, 0xcd, 0x4d, 0x10,
  0x88, 0x88, 0xc6, 0x5c, 0xda, 0xd9, 0x17, 0x1b, 0x19, 0x8d, 0xb9, 0xb4,
  0xb3, 0xaf, 0x39, 0xba, 0x09, 0x02, 0x21, 0x6d, 0x40, 0xf4, 0x60, 0x0f,
  0xf8, 0xa0, 0x0f, 0xfc, 0x60, 0x0f, 0xfe, 0x00, 0x14, 0xaa, 0xb0, 0xb1,
  0xd9, 0xb5, 0xb9, 0xa4, 0x91, 0x95, 0xb9, 0xd1, 0x4d, 0x09, 0x82, 0x2a,
  0x64, 0x78, 0x2e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x02,
  0xa2, 0x09, 0x19, 0x9e, 0x8b, 0x5d, 0x18, 0x9b, 0x5d, 0x99, 0xdc, 0x94,
  0xa0, 0xa8, 0x43, 0x86, 0xe7, 0x32, 0x87, 0x16, 0x46, 0x56, 0x26, 0xd7,
  0xf4, 0x46, 0x56, 0xc6, 0x36, 0x25, 0x40, 0xca, 0x90, 0xe1, 0xb9, 0xc8,
  0x95, 0xcd, 0xbd, 0xd5, 0xc9, 0x8d, 0x95, 0xcd, 0x4d, 0x09, 0x9c, 0x4a,
  0x64, 0x78, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74,
  0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x53, 0x84, 0xcc, 0xab, 0x43, 0x86,
  0xe7, 0x62, 0x97, 0x56, 0x76, 0x97, 0x44, 0x36, 0x45, 0x17, 0x46, 0x57,
  0x36, 0x25, 0x00, 0x83, 0x3a, 0x64, 0x78, 0x2e, 0x65, 0x6e, 0x74, 0x72,
  0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x02, 0x3c, 0xe8, 0x42,
  0x86, 0xe7, 0x32, 0xf6, 0x56, 0xe7, 0x46, 0x57, 0x26, 0x37, 0x37, 0x25,
  0x00, 0x05, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xc8,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x72, 0x10, 0x87, 0x73, 0x70, 0x03, 0x7b,
  0x08, 0x07, 0x79, 0x60, 0x87, 0x70, 0xc8, 0x87, 0x77, 0xa8, 0x07, 0x7a,
  0x98, 0x81, 0x3c, 0xe4, 0x80, 0x0f, 0x6e, 0x40, 0x0f, 0xe5, 0xd0, 0x0e,
  0xf0, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x36, 0xb0, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44,
  0xa5, 0x03, 0x0c, 0x25, 0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x05,
  0xd2, 0x70, 0xf9, 0xce, 0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44, 0x08, 0x34,
  0xc3, 0x42, 0x58, 0xc0, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c,
  0x62, 0xf3, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x09, 0x54, 0xc3, 0xe5, 0x3b,
  0x8f, 0x2f, 0x4d, 0x4e, 0x44, 0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc,
  0xb6, 0x11, 0x48, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00,
  0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00, 0x04, 0x03, 0x20, 0x0d, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x4c, 0x44, 0x4e, 0x64, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x5f, 0x00, 0x44, 0x3a, 0x5c, 0x50, 0x72, 0x6f, 0x6a, 0x65,
  0x63, 0x74, 0x73, 0x5c, 0x41, 0x54, 0x47, 0x5c, 0x67, 0x78, 0x5f, 0x64,
  0x65, 0x76, 0x5c, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x5c, 0x53,
  0x79, 0x73, 0x74, 0x65, 0x6d, 0x5c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
  0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x61, 0x6d, 0x70, 0x6c,
  0x65, 0x5c, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2e, 0x58, 0x62, 0x6f,
  0x78, 0x2e, 0x53, 0x63, 0x61, 0x72, 0x6c, 0x65, 0x74, 0x74, 0x2e, 0x78,
  0x36, 0x34, 0x5c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x5c, 0x76, 0x73, 0x2e,
  0x70, 0x64, 0x62, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x9f, 0x53, 0xc4, 0x7b, 0x24, 0xae, 0x55, 0x2c,
  0xae, 0x8b, 0xeb, 0x32, 0xba, 0xd4, 0x1b, 0x47, 0x44, 0x58, 0x49, 0x4c,
  0x34, 0x09, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x4d, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x54, 0x07, 0x00, 0x00, 0x58, 0x44, 0x41, 0x54, 0x05, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x6c, 0x07, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0xcc, 0x07, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0xd4, 0x07, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0xe4, 0x07, 0x00, 0x00,
  0x40, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x24, 0x09, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0xdb, 0x01, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x00, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x54, 0x07, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0xd2, 0x01, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x14, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xa4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x52, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x91, 0x22, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x29, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x32, 0x22, 0x48, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x93, 0x22, 0xa4, 0x84, 0x04, 0x93, 0x22, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8a, 0x8c, 0x0b, 0x84, 0xa4, 0x4c, 0x10, 0x68, 0x23, 0x00,
  0x25, 0x00, 0x14, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29,
  0xc6, 0x20, 0x84, 0x14, 0x42, 0xa6, 0x18, 0x80, 0x10, 0x52, 0x06, 0xa1,
  0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95,
  0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x31, 0xc6, 0x18, 0x54, 0xee, 0x19, 0x2e,
  0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0x43, 0xa0, 0x19, 0x16, 0x02, 0x05, 0xab,
  0x10, 0x8a, 0x30, 0x42, 0xad, 0x14, 0x83, 0x8c, 0x31, 0xe8, 0xcd, 0x11,
  0x04, 0xc5, 0x60, 0xa4, 0x10, 0x12, 0x49, 0x0e, 0x04, 0x0c, 0x23, 0x10,
  0x43, 0x12, 0xd4, 0xbb, 0x0e, 0x47, 0x9a, 0x16, 0x00, 0x73, 0xa8, 0xc9,
  0xaf, 0x88, 0x68, 0x22, 0xae, 0x8d, 0x2a, 0x0a, 0x22, 0x42, 0x81, 0xa5,
  0x9b, 0x0c, 0x04, 0x00, 0x13, 0x16, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x7c, 0x10, 0x07, 0x39, 0xd8, 0xf0,
  0x0a, 0xe5, 0xd0, 0x06, 0xed, 0xa0, 0x07, 0xe5, 0xd0, 0x06, 0xf0, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x80, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0x60,
  0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x76, 0x40,
  0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xee, 0x80, 0x07, 0x7a, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x7a, 0x60, 0x07, 0x74, 0x30,
  0xe4, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x60, 0xc8, 0x63, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x90, 0x07, 0x01, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x21, 0x4f, 0x03, 0x04, 0xc0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x43, 0x9e, 0x07, 0x08, 0x80, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x12, 0x10, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x81, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x25, 0x30, 0x02, 0x50,
  0x10, 0xc5, 0x50, 0x80, 0x01, 0x65, 0x50, 0x1e, 0x45, 0x40, 0xa5, 0x24,
  0x46, 0x00, 0x8a, 0xa0, 0x10, 0xca, 0x80, 0xf0, 0x0c, 0x00, 0xe5, 0xb1,
  0x18, 0x45, 0x79, 0x1e, 0x00, 0x80, 0xc0, 0x00, 0x14, 0x40, 0x02, 0x44,
  0x40, 0x08, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0x0c,
  0x4f, 0xec, 0x0d, 0x0f, 0x44, 0x86, 0x26, 0x06, 0xc6, 0x45, 0xa6, 0x06,
  0x26, 0xc6, 0x25, 0x26, 0x26, 0x07, 0x26, 0xc6, 0x25, 0x06, 0x06, 0x46,
  0x06, 0x66, 0x43, 0x10, 0x4c, 0x10, 0x08, 0x63, 0x82, 0x40, 0x1c, 0x1b,
  0x84, 0x81, 0x98, 0x20, 0x10, 0xc8, 0x06, 0x61, 0x30, 0x28, 0xd8, 0xcd,
  0x4d, 0x10, 0x88, 0x64, 0xc3, 0x80, 0x24, 0xc4, 0x04, 0x01, 0x9b, 0x08,
  0x4c, 0x10, 0x08, 0x65, 0x03, 0x42, 0x2c, 0x0c, 0x41, 0x0c, 0x0d, 0xb0,
  0x21, 0x70, 0x36, 0x10, 0x00, 0xf0, 0x00, 0x13, 0x84, 0x8c, 0xda, 0x10,
  0x44, 0x13, 0x04, 0x01, 0x20, 0xd1, 0x16, 0x96, 0xe6, 0x46, 0x04, 0xea,
  0x69, 0x2a, 0x89, 0x2a, 0xe9, 0xc9, 0x69, 0x82, 0x50, 0x38, 0x13, 0x84,
  0xe2, 0xd9, 0x10, 0x10, 0x13, 0x84, 0x02, 0x9a, 0x20, 0x10, 0xcb, 0x06,
  0x41, 0xd3, 0x36, 0x2c, 0x44, 0x65, 0x5d, 0xd8, 0x35, 0x64, 0xc4, 0xb5,
  0xb1, 0x18, 0x7a, 0x62, 0x7a, 0x92, 0x9a, 0x20, 0x14, 0xd1, 0x04, 0x81,
  0x60, 0x36, 0x08, 0xda, 0xb7, 0x61, 0x19, 0x3a, 0xeb, 0xc2, 0xae, 0xc1,
  0x1b, 0x2e, 0x30, 0x98, 0x20, 0x10, 0x0d, 0x11, 0xaa, 0x22, 0xac, 0xa1,
  0xa7, 0x27, 0x29, 0xa2, 0x0d, 0x8b, 0x18, 0x8c, 0x81, 0x75, 0x61, 0xd7,
  0x90, 0x89, 0xc1, 0xb5, 0x6d, 0x18, 0xb8, 0x30, 0x20, 0x03, 0x2e, 0x53,
  0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x13, 0x84,
  0x42, 0xda, 0xb0, 0x10, 0x66, 0x60, 0x9d, 0x01, 0xe6, 0x0d, 0x1e, 0x71,
  0x81, 0xc1, 0x86, 0x65, 0xe8, 0xac, 0x0b, 0xcb, 0x06, 0x6f, 0xb8, 0xc0,
  0x60, 0xc3, 0x22, 0x06, 0x63, 0x60, 0x5d, 0x58, 0x36, 0x64, 0x62, 0x70,
  0x6d, 0x1b, 0x06, 0x34, 0x48, 0x03, 0x35, 0xd8, 0x30, 0x94, 0xc1, 0x1a,
  0x00, 0x1b, 0x8a, 0x89, 0x62, 0x03, 0x08, 0xa8, 0xc2, 0xc6, 0x66, 0xd7,
  0xe6, 0x92, 0x46, 0x56, 0xe6, 0x46, 0x37, 0x25, 0x08, 0xaa, 0x90, 0xe1,
  0xb9, 0xd8, 0x95, 0xc9, 0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x88, 0x26,
  0x64, 0x78, 0x2e, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x02, 0xa3,
  0x0e, 0x19, 0x9e, 0xcb, 0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b,
  0x59, 0x19, 0xdb, 0x94, 0x20, 0x29, 0x43, 0x86, 0xe7, 0x22, 0x57, 0x36,
  0xf7, 0x56, 0x27, 0x37, 0x56, 0x36, 0x37, 0x25, 0x78, 0xea, 0x90, 0xe1,
  0xb9, 0xd8, 0xa5, 0x95, 0xdd, 0x25, 0x91, 0x4d, 0xd1, 0x85, 0xd1, 0x95,
  0x4d, 0x09, 0xa2, 0x3a, 0x64, 0x78, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x79,
  0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x02, 0x36, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xc8, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x72, 0x10, 0x87, 0x73, 0x70, 0x03, 0x7b, 0x08, 0x07, 0x79, 0x60,
  0x87, 0x70, 0xc8, 0x87, 0x77, 0xa8, 0x07, 0x7a, 0x98, 0x81, 0x3c, 0xe4,
  0x80, 0x0f, 0x6e, 0x40, 0x0f, 0xe5, 0xd0, 0x0e, 0xf0, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x36, 0xb0, 0x0d, 0x97,
  0xef, 0x3c, 0xbe, 0x10, 0x50, 0x45, 0x41, 0x44, 0xa5, 0x03, 0x0c, 0x25,
  0x61, 0x00, 0x02, 0xe6, 0x17, 0xb7, 0x6d, 0x05, 0xd2, 0x70, 0xf9, 0xce,
  0xe3, 0x0b, 0x11, 0x01, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x58, 0xc0,
  0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93,
  0x5f, 0xdc, 0xb6, 0x09, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e,
  0x44, 0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x11, 0x48, 0xc3,
  0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17, 0xb7,
  0x6d, 0x00, 0x04, 0x03, 0x20, 0x0d, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x72, 0x00, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x44, 0x4a, 0xa1, 0x10, 0x66, 0x00, 0x8a, 0xab,
  0xec, 0x4a, 0x8e, 0x4a, 0x09, 0x50, 0x1c, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x20, 0x61, 0x43, 0x63, 0x59, 0xc1,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x1d, 0x12, 0x5d, 0xcf, 0x31,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86, 0x97, 0x48, 0x18, 0x81, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xf1, 0x29, 0x5a, 0x16, 0x25, 0x23,
  0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x80, 0xc1, 0xb2, 0x69, 0x86, 0x32,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x18, 0x30, 0xdc, 0x26, 0x2d,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x88, 0x41, 0xd3, 0x71, 0x11,
  0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x18, 0x38, 0x5d, 0x57,
  0x35, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0x90, 0xc1, 0xe3, 0x79,
  0x8a, 0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xcd, 0x18, 0x34, 0xc9,
  0x37, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3,
  0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x0d, 0x1a, 0x48,
  0x4e, 0x19, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0xd3,
  0x06, 0xd7, 0x54, 0x06, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3,
  0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0xe6, 0x44, 0xf2, 0x19, 0x31, 0x40,
  0x00, 0x10, 0x04, 0x83, 0x47, 0x0e, 0x3c, 0x25, 0x0a, 0xcc, 0x08, 0xa0,
  0x63, 0x10, 0x25, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x78, 0xea,
  0x20, 0x0c, 0x18, 0x2a, 0xb0, 0x00, 0x81, 0x8e, 0x49, 0x97, 0x7c, 0x46,
  0x0c, 0x10, 0x00, 0x04, 0xc1, 0xe0, 0xc1, 0x03, 0x32, 0x70, 0xae, 0xc0,
  0x02, 0x05, 0x3a, 0x46, 0x69, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04,
  0x83, 0x67, 0x0f, 0xce, 0x00, 0xd2, 0x02, 0x0b, 0x18, 0xe8, 0x8c, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x01, 0xf2, 0x07, 0x6c, 0xa0, 0x07, 0x7a, 0x20,
  0x07, 0xca, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x7f, 0xc0, 0x06,
  0x7a, 0xa0, 0x07, 0x66, 0x70, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01,
  0xf2, 0x07, 0x6c, 0xa0, 0x07, 0x7a, 0x10, 0x07, 0xc4, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x20, 0x7f, 0xc0, 0x06, 0x7a, 0xa0, 0x07, 0x6f, 0x10,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0xf2, 0x07, 0x6c, 0xb0, 0x07,
  0x7a, 0x20, 0x07, 0x61, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc8,
  0x1f, 0xb0, 0xc1, 0x1e, 0xe8, 0x81, 0x19, 0x80, 0xc1, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x20, 0x7f, 0xc0, 0x06, 0x7b, 0xa0, 0x07, 0x71, 0xf0,
  0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0xf2, 0x07, 0x6c, 0xb0, 0x07,
  0x7a, 0xf0, 0x06, 0xde, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x7f,
  0xc0, 0x06, 0x74, 0xa0, 0x07, 0x72, 0x30, 0x06, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x80, 0xfc, 0x01, 0x1b, 0xd0, 0x81, 0x1e, 0x98, 0x81, 0x18,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x62, 0x6f, 0x70,
  0x00, 0x00, 0x00, 0x00, 0x67, 0xbc, 0x4d, 0x74, 0x0d, 0x7f, 0x3d, 0xd2,
  0x11, 0x9a, 0xa2, 0xbe, 0x52, 0xf0, 0x6b, 0x1f, 0x58, 0x42, 0x43, 0x48,
  0x03, 0x00, 0x00, 0x00, 0x28, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5c, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x9c, 0x73, 0x0b,
  0x0e, 0xf6, 0x65, 0x64, 0x64, 0x60, 0xf0, 0x61, 0x61, 0x00, 0x03, 0x36,
  0x08, 0xc5, 0xf0, 0x7e, 0xdf, 0xda, 0x7b, 0xf8, 0xf0, 0x06, 0x22, 0xd5,
  0xe1, 0xc2, 0x4c, 0x50, 0xfd, 0x2e, 0x0c, 0xe4, 0x01, 0x98, 0x39, 0x3f,
  0x60, 0x06, 0x31, 0x22, 0xe4, 0x58, 0x18, 0x24, 0x59, 0x58, 0xd0, 0xd4,
  0xff, 0x60, 0x86, 0xd0, 0x0a, 0x50, 0x09, 0x26, 0xa8, 0x16, 0x16, 0x20,
  0xeb, 0x00, 0x92, 0x3a, 0x3e, 0x86, 0x05, 0x8c, 0x48, 0x46, 0x31, 0x98,
  0xb0, 0x20, 0x8c, 0x97, 0x40, 0xb2, 0x97, 0x8d, 0x81, 0x99, 0x85, 0x91,
  0x8d, 0x91, 0x9f, 0x83, 0x99, 0x8d, 0x89, 0x99, 0x87, 0x91, 0x61, 0xb0,
  0x01, 0x90, 0x77, 0xd9, 0xc0, 0xce, 0x62, 0x63, 0x1a, 0x7c, 0xae, 0x23,
  0x0e, 0x80, 0xe2, 0xc8, 0x08, 0x09, 0x83, 0xf8, 0xe8, 0xf1, 0xca, 0x81,
  0xc6, 0x37, 0xf8, 0xff, 0x01, 0x95, 0x6f, 0x4f, 0x9c, 0x5d, 0xf3, 0x83,
  0x1b, 0xae, 0x1e, 0xf9, 0xfe, 0x8f, 0x59, 0x65, 0x5d, 0xa8, 0xce, 0xba,
  0xee, 0x86, 0xab, 0xaf, 0x53, 0xff, 0x31, 0xef, 0xba, 0x22, 0xed, 0xce,
  0xa2, 0xd8, 0xb2, 0x8f, 0x99, 0x61, 0xc1, 0xfe, 0x02, 0xfb, 0x9e, 0xfd,
  0x0c, 0x0c, 0xde, 0x57, 0x39, 0x38, 0x82, 0x80, 0x69, 0xc1, 0xfb, 0x2a,
  0x27, 0x47, 0x18, 0xd0, 0x3d, 0xde, 0x57, 0xb9, 0x38, 0xa2, 0x80, 0x61,
  0xed, 0x7d, 0x95, 0x9b, 0x23, 0x8e, 0x81, 0x87, 0x8b, 0x21, 0x8c, 0x97,
  0x8b, 0x29, 0x8c, 0x8f, 0x8b, 0x25, 0x8c, 0x9f, 0x8b, 0x2d, 0xec, 0x3c,
  0x07, 0xc3, 0x0f, 0x06, 0x46, 0x26, 0x66, 0xfe, 0xff, 0x3d, 0xfb, 0x1b,
  0x98, 0x58, 0xea, 0x3e, 0x31, 0xb1, 0xd5, 0xf1, 0x33, 0x31, 0xfc, 0xe0,
  0xe0, 0xe4, 0xe2, 0x96, 0x07, 0xd2, 0x3c, 0xbc, 0x4c, 0xc0, 0x68, 0x6a,
  0x04, 0x9a, 0x3b, 0x7f, 0x10, 0x60, 0x08, 0x10, 0x40, 0x0a, 0x57, 0x68,
  0x96, 0x81, 0x67, 0x2d, 0x09, 0x46, 0x48, 0x1c, 0x20, 0x03, 0x16, 0xa4,
  0x08, 0xf8, 0x0f, 0x04, 0x50, 0x51, 0x86, 0xdc, 0xc4, 0xcc, 0x3c, 0x00,
  0xb0, 0x72, 0xb4, 0xfb, 0x9f, 0x53, 0xc4, 0x7b, 0x24, 0xae, 0x55, 0x2c,
  0xae, 0x8b, 0xeb, 0x32, 0xba, 0xd4, 0x1b, 0x47
};
